{
    "contents" : "library(dplyr)\n\n#####\n# READ IN PHONE DATA\n#####\nsetwd('../phone_data/')\nfor (i in dir()[which(grepl('.csv', dir()))]){\n  assign(gsub('.csv', '', i), read.csv(i, stringsAsFactors = FALSE))\n}\n\n#####\n# COMBINE ALL DATAFRAMES INTO ONE\n#####\ndfs <- names(which(sapply(.GlobalEnv, is.data.frame))) \nfor (i in 1:length(dfs)){\n  \n  temp <- get(dfs[i])\n  temp$Name <- dfs[i]\n  \n  if(i == 1){\n    df <- temp\n  } else {\n    df <- rbind(df, temp)\n  }\n  # remove individuals\n  rm( list = c(dfs[i]))\n}\n\n#####\n# FORMAT DATE AND REMOVE UNECESSARY INFO\n#####\ndf$Date <- gsub('/2015', '/15', df$Date)\ndf$Date <- as.Date(df$Date, '%m/%d/%y')\n\ndf$Group <- NULL\n\n# Make minutes instead of seconds\ndf$Duration <- df$Duration / 60\n\n############################################################\n############################################################\n############################################################\n\n#####\n# READ IN DIARY DATA\n#####\nsetwd('../diary_data/')\nfor (i in dir()[which(grepl('.csv', dir()))]){\n  assign(gsub('.csv', '', i), read.csv(i, stringsAsFactors = FALSE))\n}\n\n#####\n# CLEAN UP\n#####\n\n# diary2 ##### ##### ##### #####\n\n# select only relevant columns\ndiary2 <- diary2[,c('Date', 'Name', 'Activity', 'Time.Duration', \n                    'Time.Duration.1', 'Calculated.Time.Duration')]\nnames(diary2) <- c('Date', 'Name', 'Activity', 'Start', 'Finish', 'Duration')\n\n# address times\ndiary2$start_hour <- as.numeric(gsub(':.*', '', diary2$Start))\ndiary2$start_hour <- ifelse(grepl('AM', diary2$Start), diary2$start_hour,\n                            diary2$start_hour + 12)\n\n# estimate time of day (period)\ndiary2$Period <- ifelse(diary2$start_hour <=12,\n                        'Morning',\n                        ifelse(diary2$start_hour <= 17,\n                               'Afternoon',\n                               'Evening'))\n\n# whittle down a bit\ndiary2$Start <- diary2$Finish <- diary2$start_hour <- NULL\n\n# dates\ndiary2$Date <- as.Date(diary2$Date, '%m/%d/%Y')\n\n# diary1 ##### ##### ##### #####\n\n# Clean up a bit\ndiary1 <- diary1[,c('Date', 'Name', 'Walk', 'Run', 'Bike', 'Time.Duration')]\ndiary1$Date <- as.Date(diary1$Date, '%m/%d/%Y')\ndiary1$Period <- diary1$Time.Duration\ndiary1$Time.Duration <- NULL\n\n# Get format to match with df and diary2\nd1 <- diary2[-c(1:nrow(diary2)),]\nnew_row_format = data.frame(Date = NA,\n                            Name = NA, \n                            Activity = NA,\n                            Duration = NA,\n                            Period = NA)\n\n\nfor (i in 1:nrow(diary1)){\n  old_row <- diary1[i,]\n  \n  # Walk\n  if(old_row$Walk > 0 & !is.na(old_row$Walk)){\n    new_row <- new_row_format\n    new_row$Date <- old_row$Date\n    new_row$Name <- old_row$Name\n    new_row$Activity <- 'Walking'\n    new_row$Duration <- old_row$Walk\n    new_row$Period <- old_row$Period\n    d1 <- rbind(d1, new_row)\n  }\n  \n  # Run\n  if(old_row$Run > 0 & !is.na(old_row$Run)){\n    new_row <- new_row_format\n    new_row$Date <- old_row$Date\n    new_row$Name <- old_row$Name\n    new_row$Activity <- 'Running'\n    new_row$Duration <- old_row$Run\n    new_row$Period <- old_row$Period\n    d1 <- rbind(d1, new_row)\n  }\n  \n  # Bike\n  if(old_row$Bike > 0 & !is.na(old_row$Bike)){\n    new_row <- new_row_format\n    new_row$Date <- old_row$Date\n    new_row$Name <- old_row$Name\n    new_row$Activity <- 'Biking'\n    new_row$Duration <- old_row$Bike\n    new_row$Period <- old_row$Period\n    d1 <- rbind(d1, new_row)\n  }\n}\n\ndiary1 <- d1\n\n\n##### ##### ##### ##### \n# Join together diaries\ndiary <- rbind(diary1, diary2)\n\n# Remove garbage\nrm(d1, diary1, diary2, new_row, new_row_format, old_row, temp, dfs, i)\n\n# Clean duration\nfor (i in 1:nrow(diary)){\n  val <- diary$Duration[i]\n  if (grepl(':', val)){\n    hours <- as.numeric(gsub(':.*', '', val))\n    minutes <- as.numeric(gsub('.*:', '', val))\n    new_val <- as.numeric((hours*60) + minutes)\n  } else {\n    new_val <- as.numeric(val)\n  }\n  diary$Duration[i] <- new_val\n}\ndiary$Duration <- as.numeric(diary$Duration)\n\n##############################################################\n##############################################################\n##############################################################\n##############################################################\n##############################################################\n\n\n#####\n# JOIN TOGETHER MASTER\n#####\ndf <- df[,c('Date', 'Activity', 'Duration', 'Name')]\ndf$method <- 'app'\n\ndiary <- diary[,c('Date', 'Activity', 'Duration', 'Name')]\ndiary$method <- 'diary'\ndiary$Activity <- tolower(diary$Activity)\ndiary$Activity[which(diary$Activity == 'biking')] <- 'cycling'\n\nmaster <- rbind(diary, df)\n\n# Clean up names\nmaster$Name <- ifelse(master$Name == 'joe', 'Joe',\n                      ifelse(master$Name == 'jake', 'Jake',\n                             ifelse(substr(tolower(master$Name),1,1) == 's',\n                                    'Sheldon',\n                                    ifelse(substr(tolower(master$Name),1,1) == 'x',\n                                           'Xu',\n                                           ifelse(substr(tolower(master$Name),1,1) == 'y',\n                                                  'Yun', master$Name)))))\n\n#####\n# FILTER ONLY GOOD DATES\n#####\nmaster <- master[which(master$Date >= '2015-03-30' &\n                         master$Date <= '2015-04-10'),]\n\n# Remove transport\nmaster <- master[which(master$Activity != 'transport'),]\n\n# Capitalization in activity\nmaster$Activity <- tolower(master$Activity)\n\n#####\n# SEPARATE AND AGGREGATE\n#####\napp_df <- master %>%\n  filter(method == 'app') %>%\n  group_by(Name, Date, Activity) %>%\n  summarise(app_time = sum(Duration))\ndiary_df <- master %>%\n  filter(method == 'diary') %>%\n  group_by(Name, Date, Activity) %>%\n  summarise(diary_time = sum(Duration))\nagg <- left_join(app_df, diary_df,\n                 by = c('Name', 'Date', 'Activity'))\n\n# Fill NA's with 0s\nagg$diary_time[which(is.na(agg$diary_time))] <- 0\nagg$app_time[which(is.na(agg$app_time))] <- 0\n\n#####\n# VISUALIZE\n#####\nagg$color <- ifelse(agg$Activity == 'walking', 'darkgreen', \n                    ifelse(agg$Activity == 'running', 'darkred',\n                           ifelse(agg$Activity == 'cycling', 'darkblue', NA)))\nagg$color <- adjustcolor(agg$color, alpha.f = 0.6)\nagg$shape <- ifelse(agg$Name == 'Joe', 21,\n                    ifelse(agg$Name == 'Xu', 15,\n                           ifelse(agg$Name == 'Sheldon', 16,\n                                  ifelse(agg$Name == 'Jake', 17,\n                                         ifelse(agg$Name == 'Yun', 18, 3)))))\n\nplot(agg$diary_time,\n     agg$app_time,\n    xlim = c(0, 150),\n    ylim = c(0, 150),\n     pch = agg$shape,\n     cex = 1,\n     col = agg$color,\n    xlab = 'Minutes (per diary)',\n    ylab = 'Minutes (per phone)',\n    main = 'Agreement between diary and phone app')\ngrid()\n\n\nlegend('bottomright',\n       pch = c(21, 15:18),\n       legend = c('Joe', 'Xu', 'Sheldon', 'Jake', 'Yun'),\n       col = 'grey',\n       title = 'Who',\n       cex = 0.8,\n       ncol = 2)\n\nlegend('bottom',\n       fill = adjustcolor(c('darkgreen', 'darkred', 'darkblue'), alpha.f = 0.6),\n       legend = c('Walking', 'Running', 'Cycling'),\n       title = 'What', cex = 0.8,\n       border = NA)\n\nabline(a = 0, b = 1)\ntext(x = 120, y = 120,\n     labels = 'Line of\\nperfect match',\n     col = adjustcolor('black', alpha.f = 0.6))\n\n#####\n#\n#####\n",
    "created" : 1429133308061.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "934897012",
    "id" : "D76A8525",
    "lastKnownWriteTime" : 1429139075,
    "path" : "~/moves/activity/helpers.R",
    "project_path" : "helpers.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}